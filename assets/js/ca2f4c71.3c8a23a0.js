"use strict";(self.webpackChunkcentauri_documentation=self.webpackChunkcentauri_documentation||[]).push([[779],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(n),m=o,h=l["".concat(s,".").concat(m)]||l[m]||d[m]||i;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[l]="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={title:"HTTP Interceptor",description:"Centauri lets you create an HTTP Interceptor so that you can perform various actions on a response or a request."},a=void 0,p={unversionedId:"guides/http_interceptor/README",id:"guides/http_interceptor/README",title:"HTTP Interceptor",description:"Centauri lets you create an HTTP Interceptor so that you can perform various actions on a response or a request.",source:"@site/docs/guides/http_interceptor/README.md",sourceDirName:"guides/http_interceptor",slug:"/guides/http_interceptor/",permalink:"/docs/guides/http_interceptor/",draft:!1,editUrl:"https://github.com/kkrypt0nn/centauri/tree/main/documentation/docs/guides/http_interceptor/README.md",tags:[],version:"current",frontMatter:{title:"HTTP Interceptor",description:"Centauri lets you create an HTTP Interceptor so that you can perform various actions on a response or a request."},sidebar:"sidebar",previous:{title:"Gateway Client",permalink:"/docs/guides/gateway_client/"},next:{title:"Intents",permalink:"/docs/guides/intents/"}},s={},c=[{value:"Using interceptor",id:"using-interceptor",level:2},{value:"Default interceptor",id:"default-interceptor",level:2},{value:"Example",id:"example",level:2}],u={toc:c},l="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This is not intended for beginners, so use it only if you know what you're doing.")),(0,o.kt)("p",null,"Centauri lets you create an HTTP Interceptor so that you can perform various actions on a response or a request. Centauri will call the ",(0,o.kt)("inlineCode",{parentName:"p"},"ModifyRequest()")," method of the interceptor ",(0,o.kt)("strong",{parentName:"p"},"just before")," doing the request and the ",(0,o.kt)("inlineCode",{parentName:"p"},"ModifyResponse()")," method ",(0,o.kt)("strong",{parentName:"p"},"just before")," returning the response and handling it."),(0,o.kt)("p",null,"You can see an example of using an HTTP Interceptor ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kkrypt0nn/centauri/blob/main/_examples/http_interceptor/main.go"},"here"),"."),(0,o.kt)("h2",{id:"using-interceptor"},"Using interceptor"),(0,o.kt)("p",null,"Each interceptor must have the ",(0,o.kt)("inlineCode",{parentName:"p"},"ModifyRequest()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ModifyResponse()")," methods implemented, which take as argument ",(0,o.kt)("inlineCode",{parentName:"p"},"*http.Request")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"*http.Response")," respectively."),(0,o.kt)("p",null,"You can set the interceptor with the ",(0,o.kt)("inlineCode",{parentName:"p"},"SetInterceptor()")," method on the ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClient")," field of the REST Client."),(0,o.kt)("h2",{id:"default-interceptor"},"Default interceptor"),(0,o.kt)("p",null,"Centauri has a default interceptor (",(0,o.kt)("inlineCode",{parentName:"p"},"rest.DefaultInterceptor"),") which you can use that implements the ",(0,o.kt)("inlineCode",{parentName:"p"},"ModifyRequest()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ModifyResponse()")," methods already so you can just override one of them."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Here is an example of an interceptor that uses the default interceptor as base so that it is only needed to specify which method we want to override. The interceptor will modify the request and change the authorization header right before the client will send the request."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "net/http"\n\n    "github.com/kkrypt0nn/centauri"\n    "github.com/kkrypt0nn/centauri/rest"\n)\n\n// This is our custom interceptor that is based on the default interceptor\ntype MyInterceptor struct {\n    rest.DefaultInterceptor\n}\n\nfunc NewCustomInterceptor() *MyInterceptor {\n    return &MyInterceptor{}\n}\n\n// We just modify the request\'s authorization header\nfunc (i *MyInterceptor) ModifyRequest(r *http.Request) {\n    r.Header.Set("Authorization", "Bot OTHER_BOT_TOKEN")\n}\n\nfunc main() {\n    botClient := centauri.NewRestClient("Bot BOT_TOKEN")\n    botClient.Debug = true\n\n    // We set the interceptor\n    botClient.HttpClient.SetInterceptor(NewCustomInterceptor())\n\n    bot, err := botClient.GetCurrentUser()\n    if err != nil {\n        fmt.Println("err:", err)\n    } else {\n        fmt.Println(fmt.Sprintf("Got bot %s with ID %d", bot.Username, bot.ID))\n    }\n}\n')))}d.isMDXComponent=!0}}]);